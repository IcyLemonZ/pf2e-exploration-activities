{"name":"Exploration Activities Request","type":"script","author":"sEmJZyvLLJjyMlPu","img":"icons/svg/dice-target.svg","scope":"global","command":"// Macro for GM to request exploration activities from selected players\nconst tokens = canvas.tokens.controlled.filter((t) =>\n  ['character'].includes(t.actor.type),\n)\n\nif (tokens.length === 0) {\n  ui.notifications.error(`You must select at least one pc token`)\n} else {\n  let chatData = {\n    content: 'GM has requested Exploration Activities',\n  }\n  ChatMessage.create(chatData, {})\n\n  tokens.forEach((token) => {\n    let actor = token.actor\n    let tokenID = token.id\n    game.socket.emit('module.pf2e-exploration-activities', {\n      operation: 'playerExplorationActivity',\n      actor,\n      tokenID,\n    })\n  })\n}","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.sVT84BxF1odSuHfX"}},"ownership":{"default":0,"fIA598aUiI634NnA":3,"sEmJZyvLLJjyMlPu":3},"_stats":{"systemId":"pf2e","systemVersion":"4.5.1","coreVersion":"10.291","createdTime":1672395169568,"modifiedTime":1672418956286,"lastModifiedBy":"sEmJZyvLLJjyMlPu"},"_id":"X71zECVrMHHm0MOY"}
{"name":"Set Exploration Activity","type":"script","scope":"global","author":"sEmJZyvLLJjyMlPu","img":"icons/svg/dice-target.svg","command":"const tokens = canvas.tokens.controlled.filter((t) =>\n  ['character'].includes(t.actor.data.type),\n)\n\nif (tokens.length === 0) {\n  ui.notifications.error(`You must select at least one pc token`)\n} else {\n  tokens.forEach((token) => {\n    let actor = token.actor\n    let tokenID = token.id\n    explorationActivity(actor, tokenID)\n  })\n}\n\nfunction explorationActivity(actor, tokenID) {\n  let token = canvas.tokens.get(tokenID)\n  let content = ''\n  let selectedActivity\n  let activities = {\n    'Avoid Notice':\n      '@Compendium[pf2e.actionspf2e.IE2nThCmoyhQA0Jn]{Avoid Notice}',\n    'Cover Tracks':\n      '@Compendium[pf2e.actionspf2e.SB7cMECVtE06kByk]{Cover Tracks}',\n    Defend: '@Compendium[pf2e.actionspf2e.cYtYKa1gDEl7y2N0]{Defend}',\n    'Detect Magic':\n      '@Compendium[pf2e.actionspf2e.Yb0C1uLzeHrVLl7a]{Detect Magic}',\n    'Follow the Expert':\n      '@Compendium[pf2e.actionspf2e.tfa4Sh7wcxCEqL29]{Follow the Expert}',\n    Hustle: '@Compendium[pf2e.actionspf2e.JuqmIAnkL9hVGai8]{Hustle}',\n    Investigate: '@Compendium[pf2e.actionspf2e.EwgTZBWsc8qKaViP]{Investigate}',\n    'Repeat a Spell':\n      '@Compendium[pf2e.actionspf2e.OQaFzDtVEOMWizJJ]{Repeat a Spell}',\n    Scout: '@Compendium[pf2e.actionspf2e.kV3XM0YJeS2KCSOb]{Scout}',\n    Search: '@Compendium[pf2e.actionspf2e.TiNDYUGlMmxzxBYU]{Search}',\n    Track: '@Compendium[pf2e.actionspf2e.EA5vuSgJfiHH7plD]{Track}',\n  }\n\n  let additionalActions = {\n    'Borrow an Arcane Spell':\n      '@Compendium[pf2e.actionspf2e.OizxuPb44g3eHPFh]{Borrow an Arcane Spell}',\n    Coerce: '@Compendium[pf2e.actionspf2e.tHCqgwjtQtzNqVvd]{Coerce}',\n    'Cover Tracks':\n      '@Compendium[pf2e.actionspf2e.SB7cMECVtE06kByk]{Cover Tracks}',\n    'Decipher Writing':\n      '@Compendium[pf2e.actionspf2e.d9gbpiQjChYDYA2L]{Decypher Writing}',\n    'Gather Information':\n      '@Compendium[pf2e.actionspf2e.plBGdZhqq5JBl1D8]{Gather Information}',\n    'Identify Alchemy':\n      '@Compendium[pf2e.actionspf2e.Q4kdWVOf2ztIBFg1]{Identify Alchemy}',\n    'Identify Magic':\n      '@Compendium[pf2e.actionspf2e.eReSHVEPCsdkSL4G]{Identify Magic}',\n    Impersonate: '@Compendium[pf2e.actionspf2e.AJstokjdG6iDjVjE]{Impersonate}',\n    'Learn a Spell':\n      '@Compendium[pf2e.actionspf2e.Q5iIYCFdqJFM31GW]{Learn a Spell}',\n    'Make an Impression':\n      '@Compendium[pf2e.actionspf2e.OX4fy22hQgUHDr0q]{Make an Impression}',\n    'Sense Direction':\n      '@Compendium[pf2e.actionspf2e.fJImDBQfqfjKJOhk]{Sense Direction}',\n    Squeeze: '@Compendium[pf2e.actionspf2e.kMcV8e5EZUxa6evt]{Squeeze}',\n    'Treat Wounds':\n      '@Compendium[pf2e.actionspf2e.1kGNdIIhuglAjIp9]{Treat Wounds}',\n  }\n\n  //contentUpdate();\n  const dialogStyle = `\n  <style>\n    .my-class {\n      margin-bottom: 12px; \n    }\n  </style>`\n  content = dialogStyle\n  content += `<div id=\"pf2e-explorationActivity-scripts-content\"><label for=\"activity\">Choose an activity: </label>\n    <select class =\"my-class\"  name=\"activity\" id=\"activity\">`\n  content += `<optgroup label=\"common\">`\n  for (let i = 0; i < Object.keys(activities).length; i++) {\n    content += `<option value=\"${activities[Object.keys(activities)[i]]}\">${\n      Object.keys(activities)[i]\n    }</option>`\n  }\n  content += `</optgroup>`\n  content += `<optgroup label=\"additional\">`\n  for (let i = 0; i < Object.keys(additionalActions).length; i++) {\n    content += `<option value=\"${\n      additionalActions[Object.keys(additionalActions)[i]]\n    }\">${Object.keys(additionalActions)[i]}</option>`\n  }\n  content += `</optgroup>`\n  content += `</select></div>`\n\n  let d = new Dialog({\n    title: 'Exploration Activity',\n    content,\n    buttons: {\n      select: {\n        icon: \"\",\n        label: 'Select',\n        callback: (html) => {\n          selectedActivity =\n            '<h3>I will <b>' + html.find('#activity')[0].value + '</b></h3>'\n          generateChat(actor, selectedActivity)\n          applyEffect(actor, html.find('#activity')[0].value)\n        },\n      },\n      cancel: {\n        icon: \"\",\n        label: 'Cancel',\n        callback: () => {\n          selectedActivity = '<h3>I will do nothing in particular.</h3>'\n          generateChat(actor, selectedActivity)\n        },\n      },\n    },\n  })\n  d.options.width = 250\n  d.position.width = 250\n  d.render(true)\n\n  // used to create the chat messages\n  async function generateChat(actor, output) {\n    let chatData = {\n      user: game.user._id,\n      speaker: {\n        alias: actor.name,\n      },\n      content: output,\n    }\n    await ChatMessage.create(chatData, {})\n  }\n\n  //used to apply effect\n  async function applyEffect(actor, selectedEffect) {\n    const re = /\\{(.*)\\}/i\n    let effectName = selectedEffect.match(re)[1]\n    const explorationEffects = {\n      'Avoid Notice':\n        'Compendium.pf2e-exploration-effects.exploration-effects.N8vpuGy4TzU10y8E',\n      'Cover Tracks':\n        'Compendium.pf2e-exploration-effects.exploration-effects.F6vJYLZTWDpnrnCZ',\n      Defend:\n        'Compendium.pf2e-exploration-effects.exploration-effects.GYOyFj4ziZX060rZ',\n      'Detect Magic':\n        'Compendium.pf2e-exploration-effects.exploration-effects.OjRHL0B4WAUUQc13',\n      'Follow the Expert':\n        'ompendium.pf2e-exploration-effects.exploration-effects.V347nnVBGDrVWh7k',\n      Hustle:\n        'Compendium.pf2e-exploration-effects.exploration-effects.vNUrKvoOSvEnqzhM',\n      Investigate:\n        'Compendium.pf2e-exploration-effects.exploration-effects.tDsgl8YmhZbx2May',\n      'Repeat a Spell':\n        'Compendium.pf2e-exploration-effects.exploration-effects.kh1QdKkvbNZ0qBsQ',\n      Scout:\n        'Compendium.pf2e-exploration-effects.exploration-effects.mGFBHM1lvHNZ9BsH',\n      Search:\n        'Compendium.pf2e-exploration-effects.exploration-effects.XiVLHjg5lQVMX8Fj',\n      Track:\n        'Compendium.pf2e-exploration-effects.exploration-effects.OcCXjJab7rSR3mDf',\n    }\n\n    let effect = explorationEffects[effectName]\n    if (effect != undefined) {\n      console.log('the effect is ' + effect)\n      let item = (await fromUuid(effect)).toObject()\n      await token.actor.createEmbeddedDocuments('Item', [item])\n    }\n  }\n}","folder":null,"sort":0,"ownership":{"default":0,"sEmJZyvLLJjyMlPu":3},"flags":{},"_stats":{"systemId":"pf2e","systemVersion":"4.5.1","coreVersion":"10.291","createdTime":1672400444865,"modifiedTime":1672421988278,"lastModifiedBy":"sEmJZyvLLJjyMlPu"},"_id":"jjWgeZpQt8ntHJit"}
